1. Creating a Personal Access Token 
2. Creating A Parameter Store Variable named 'github/personal_access_token'
3. Create an IAM Role with following permissions 
```
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:GetParameterHistory"
      ],
      "Resource": "arn:aws:ssm:REGION:ACCOUNT_ID:parameter/PARAMETER_NAME"
    }
  ]
}

```
4. Create A Security Group with inbound traffic allowing on port 22 ( for ssh in case any issues with runner ) and allow all outbound traffic. 
5. Create a launch template using above iam role and security group. Also while selecting subnet please enable `auto assign public ip` as our runners will not get registered without this. Please use following user data for amazon linux ami. 

```
#!/bin/bash

# Installing Prerequisites

yum update -y 
yum install curl -y --skip-broken
yum install libicu -y
yum install jq -y
yum install docker -y
systemctl enable docker
systemctl start docker
usermod -a -G docker $(whoami)
usermod -a -G docker ec2-user
chown ec2-user:docker /var/run/docker.sock

# Runner Registration

mkdir /home/ec2-user/github-master-runner 
cd /home/ec2-user/github-master-runner
curl -o actions-runner-linux-x64-2.312.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.312.0/actions-runner-linux-x64-2.312.0.tar.gz
tar xzf ./actions-runner-linux-x64-2.312.0.tar.gz 
PARAMETER_NAME="PARAMETER_NAME"
REGION="us-east-1"
export OWNER="GITHUB_USERNAME"
export REPO="GITHUB_REPO_NAME"
export GITHUB_PAT=$(aws ssm get-parameter --name $PARAMETER_NAME --with-decryption --region $REGION --query Parameter.Value --output text)
export TOKEN_JSON=$(curl -L   -X POST   -H "Accept: application/vnd.github+json"   -H "Authorization: Bearer $GITHUB_PAT"   -H "X-GitHub-Api-Version: 2022-11-28"   https://api.github.com/repos/$OWNER/$REPO/actions/runners/registration-token)
export TOKEN=$(echo ${TOKEN_JSON} | jq -r ".token")
printf "${INSTANCE_ID}\n\n" | ./config.sh --url https://github.com/$OWNER/$REPO --token ${TOKEN} --runnergroup Default --name ${INSTANCE_ID} --labels master
./svc.sh install
./svc.sh start
chown -R ec2-user:ec2-user .credentials* .env .path .runner
chown -R ec2-user:ec2-user /home/ec2-user/github-master-runner/* /home/ec2-user/github-master-runner/.

```
6. Creating Lambda Function to Deregister Runner and configure a event bridge rule to trigger the lambda function. 

Event Pattern 
```
{
  "source": ["aws.autoscaling"],
  "detail-type": ["EC2 Instance Launch Successful", "EC2 Instance Terminate Successful", "EC2 Instance Launch Unsuccessful", "EC2 Instance Terminate Unsuccessful", "EC2 Instance-launch Lifecycle Action", "EC2 Instance-terminate Lifecycle Action"],
  "detail": {
    "AutoScalingGroupName": ["GITUHB_ACTIONS_ASG_NAME"]
  }
}
```
Additional Lambda Permission apart from default ones. 
```
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:GetParameterHistory"
      ],
      "Resource": "arn:aws:ssm:REGION:ACCOUNT_ID:parameter/PARAMETER_NAME"
    }
  ]
}
```
7. 

